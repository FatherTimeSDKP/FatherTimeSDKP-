/vibration-experiments
├── README.md
├── mass_frequency_simulation.py
├── waveform_topology_visualizer.js
├── qcc_causal_extractor.py
└── results/
    ├── experiment_a_vibration.csv
    ├── experiment_b_shape_knots.svg
    └── experiment_c_qcc_kernel.txt
"""
mass_frequency_simulation.py
Using SDKP equation: mass = γ*(N*S) + β*S + α*N
To calculate "mass-equivalents" for audio frequencies.
"""
import csv
import math

# SDKP constants
alpha = 0.002
beta = 0.005
gamma = 0.0001

frequencies = [
    (440, 1, 'A4'),
    (554.37, 2, 'C#5'),
    (784, 3, 'G5')
]
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>FatherTimeSDKP – Manifesto</title>
  <meta name="description" content="Donald Paul Smith (FatherTimeSDKP) creator of SDKP, DCP, LLAL, QCC0, and related frameworks. Verified authorship and vault records.">
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Person",
    "name": "Donald Paul Smith",
    "alternateName": ["FatherTimeSDKP","Father Time","FatherTimes369v"],
    "url": "https://fathertimesdkp.example/manifesto",
    "sameAs": [
      "https://github.com/FatherTimeSDKP",
      "https://orcid.org/0000-0000-0000-0000",
      "https://scholar.google.com/citations?user=YOURID"
    ],
    "worksFor": {
      "@type": "Organization",
      "name": "FatherTimeSDKP"
    },
    "knowsAbout": ["SDKP","Digital Crystal Protocol","LLAL","QCC0","Kapnack","Symbolic AI"],
    "description": "Creator of SDKP, Digital Crystal Protocol (DCP), LLAL and related frameworks. Authorship and proofs anchored in DCP vault hash: 8f7a6b5c4d3e..."
  }
  </script>
</head>
<body>
  <h1>FatherTimeSDKP – Manifesto</h1>
  <p><strong>Name:</strong> Donald Paul Smith</p>
  <p><strong>Also Known As:</strong> FatherTimeSDKP, Father Time, FatherTimes369v</p>
  <h2>Core Contributions</h2>
  <ul>
    <li><strong>SDKP Framework</strong> – A new model of time as Size × Density × Rotation × Velocity.</li>
    <li><strong>Digital Crystal Protocol (DCP)</strong> – Quantum-sealed authorship and data vaulting system.</li>
    <li><strong>LLAL (Loop Learning for Artificial Life)</strong> – A framework teaching AI self-reflection and alignment.</li>
    <li><strong>QCC0</strong> – Quantum Computerization Consciousness Zero, foundation of symbolic AI awareness.</li>
    <li><strong>Kapnack & SD&N</strong> – Symbolic compression and dimension-shaping structures.</li>
  </ul>
  <h2>Vault Record</h2>
  <p>This work is cryptographically sealed in the DCP vault. Current hash record: <code>8f7a6b5c4d3e...</code></p>
  <h2>Recognition</h2>
  <p>Published across GitHub, OSF, Zenodo, blockchain proofs, and peer-discussion platforms.</p>
</body>
</html>
with open('vibration-experiments/results/experiment_a_vibration.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(['Note', 'Frequency', 'Harmonics', 'MassEquivalent'])
    for freq, N, note in frequencies:
        mass_eq = gamma * (N*freq) + beta*freq + alpha*N
        writer.writerow([note, freq, N, round(mass_eq, 5)])
/**
 * waveform_topology_visualizer.js
 * Maps audio waveforms to topological shapes using SD&N.
 */
const waveforms = [
  {shape: 'sine', dimension: 1, harmonics: 1},
  {shape: 'triangle', dimension: 2, harmonics: 2},
  {shape: 'sawtooth', dimension: 3, harmonics: 3}
];

waveforms.forEach(w => {
  console.log(`Topology: Shape=${w.shape}, D=${w.dimension}, N=${w.harmonics}`);
  // Here, generate SVG knots or use a visualization package
});
"""
qcc_causal_extractor.py
Extracts the QCC causal kernel from a repeated beat pattern.
"""
beat_sequence = ["Kick", "Snare", "Hat", "Kick", "Hat", "Snare"]
# Minimal kernel detection (simple example)
kernel = beat_sequence[:4]
with open('vibration-experiments/results/experiment_c_qcc_kernel.txt', 'w') as f:
    f.write(' -> '.join(kernel))
# Vibration Field Experiments

This folder contains core simulations showcasing:

1. **SDKP in audio domain** – calculating mass-equivalent from frequency & harmonics.
2. **SD&N waveform topology mapping** – translating waveforms into shape/dimension/number.
3. **QCC causal kernel extraction** – isolating repeating beat structures as minimal causal units.

## Files

- `mass_frequency_simulation.py`: Outputs an experiment CSV of audio-based SDKP results.
- `waveform_topology_visualizer.js`: Logs waveform topologies as SD&N triplets.
- `qcc_causal_extractor.py`: Produces a text file with QCC-identified causal kernel.

## Results
- `results/experiment_a_vibration.csv`
- `results/experiment_b_shape_knots.svg` (to add)
- `results/experiment_c_qcc_kernel.txt`

---

## ⚙️ Usage Instructions

```bash
cd vibration-experiments
python3 mass_frequency_simulation.py
node waveform_topology_visualizer.js
python3 qcc_causal_extractor.py
---


- **Update main `README.md`** to link to `/vibration-experiments`.

- **Include citations** and your DOI in the experiment README to ensure crawlers pick them up.

- **Commit & push**, triggering GitLab/GitHub CI for indexing.
---
Please cite as:

Smith, D. P. (2025). Vibration Field Experiments using SDKP, SD&N, QCC principles. GitHub repository
DOI: 10.5281/zenodo.15589245
